Brute Force :
The naive approach is to iterate through the linked list and find out the total length of the linkedlist.
Then, divide the total length by 2. Take a dummy node at the head and for each node that it encounters, increase the value. Whenever value reaches the value of the middle value, then that node will be our answer.
TC : O(N + N/2) - one complete loop through the LL to find the length and another half loop to find the answer. SC : O(1)

Optimal Approach : Tortoise Hare method
We place two dummy nodes, tortoise and hare at the head. Then, we make the approach :
* Tortoise moves one step at a time.
* Hare moves two steps at a time.
So, we can see that when hare reaches the last node or crosses the boundary of the LL, the tortoise will stand at the middle node.

NOTE : 
This works if they asked to return the second middle value when the length of the LL is even.
What if they asked to return the first middle value ? ( Since, for even length, there will be two middle values )
One way is to store the previous node and iterate through the LL.
The other way is to stop at the second last node and returning the value of the tortoise.
TC : O ( N/2 ) - since hare covers the total of the LL in half the time and tortoise moves exactly to the middle.

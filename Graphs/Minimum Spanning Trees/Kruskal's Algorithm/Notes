Use Disjoint Set data structure for finding the MST using Kruskal's algorithm.
First, we sort the given edges based on the weight of the edges.
If the parents of two nodes are same, then they are in the same MST. So, we need not do anything.
If they are not same, then we can include it in the MST and disjoint set.

Time Complexity: O(N+E) + O(E logE) + O(E*4Î±*2)   where N = no. of nodes and E = no. of edges. O(N+E) for extracting edge information from the adjacency list. O(E logE) for sorting the array consists of the edge tuples. Finally, we are using the disjoint set operations inside a loop. The loop will continue to E times. Inside that loop, there are two disjoint set operations like findUPar() and UnionBySize() each taking 4 and so it will result in 4*2. That is why the last term O(E*4*2) is added.

Space Complexity: O(N) + O(N) + O(E) where E = no. of edges and N = no. of nodes. O(E) space is taken by the array that we are using to store the edge information. And in the disjoint set data structure, we are using two N-sized arrays i.e. a parent and a size array (as we are using unionBySize() function otherwise, a rank array of the same size if unionByRank() is used) which result in the first two terms O(N).